<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.TicketMapper">
  <resultMap id="BaseResultMap" type="entity.Ticket">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="movieId" jdbcType="INTEGER" property="movieid" />
    <result column="cinemaId" jdbcType="INTEGER" property="cinemaid" />
    <result column="hallid" jdbcType="INTEGER" property="hallid" />
    <result column="day" jdbcType="VARCHAR" property="day" />
    <result column="time" jdbcType="VARCHAR" property="time" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="ticketsum" jdbcType="INTEGER" property="ticketsum" />
  </resultMap>
  <sql id="Base_Column_List">
    id, movieId, cinemaId, hallid, day, time, price, type, ticketsum
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ticket
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ticket
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="entity.Ticket">
    insert into ticket (id, movieId, cinemaId, 
      hallid, day, time, 
      price, type, ticketsum
      )
    values (#{id,jdbcType=INTEGER}, #{movieid,jdbcType=INTEGER}, #{cinemaid,jdbcType=INTEGER}, 
      #{hallid,jdbcType=INTEGER}, #{day,jdbcType=VARCHAR}, #{time,jdbcType=VARCHAR}, 
      #{price,jdbcType=DOUBLE}, #{type,jdbcType=VARCHAR}, #{ticketsum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="entity.Ticket">
    insert into ticket
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="movieid != null">
        movieId,
      </if>
      <if test="cinemaid != null">
        cinemaId,
      </if>
      <if test="hallid != null">
        hallid,
      </if>
      <if test="day != null">
        day,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="ticketsum != null">
        ticketsum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="movieid != null">
        #{movieid,jdbcType=INTEGER},
      </if>
      <if test="cinemaid != null">
        #{cinemaid,jdbcType=INTEGER},
      </if>
      <if test="hallid != null">
        #{hallid,jdbcType=INTEGER},
      </if>
      <if test="day != null">
        #{day,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="ticketsum != null">
        #{ticketsum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="entity.Ticket">
    update ticket
    <set>
      <if test="movieid != null">
        movieId = #{movieid,jdbcType=INTEGER},
      </if>
      <if test="cinemaid != null">
        cinemaId = #{cinemaid,jdbcType=INTEGER},
      </if>
      <if test="hallid != null">
        hallid = #{hallid,jdbcType=INTEGER},
      </if>
      <if test="day != null">
        day = #{day,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="ticketsum != null">
        ticketsum = #{ticketsum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.Ticket">
    update ticket
    set movieId = #{movieid,jdbcType=INTEGER},
      cinemaId = #{cinemaid,jdbcType=INTEGER},
      hallid = #{hallid,jdbcType=INTEGER},
      day = #{day,jdbcType=VARCHAR},
      time = #{time,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      type = #{type,jdbcType=VARCHAR},
      ticketsum = #{ticketsum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="listTicket" resultType="dto.TicketDto">
    select
    t.id as id,

    t.movieid as movieid,
    m.name as movieName,

    t.cinemaid as cinemaid,
    c.name as cinemaName,

    t.hallid as hallid,
    h.hallname as hallname,

    t.day as 'day',
    t.time as 'time',
    t.price as price,
    t.type as type,
    t.ticketsum as ticketsum

    from ticket as t,movieinfo as m,cinema as c,hall as h
    where t.movieid = m.id and t.cinemaid = c.id and t.hallid = h.id order by t.id desc
  </select>

  <select id="haveTicket" parameterType="dto.TicketDto" resultType="java.lang.Integer">
    select
    count(1)
    from ticket
    where
    movieid = #{movieid}
    and cinemaid = #{cinemaid}
    and day = #{day}
    and time = #{time}
    and price = #{price}
    and type = #{type}
  </select>


  <select id="getTicket" resultType="dto.TicketDto">
    select
    t.id as id,

    t.movieid as movieid,
    m.name as movieName,

    t.cinemaid as cinemaid,
    c.name as cinemaName,

    t.hallid as hallid,
    h.hallname as hallname,

    t.day as 'day',
    t.time as 'time',
    t.price as price,
    t.type as type,
    t.ticketsum as ticketsum

    from ticket as t,movieinfo as m,cinema as c,hall as h
    where t.movieid = m.id and t.cinemaid = c.id and t.hallid = h.id and t.id = #{id}
  </select>
</mapper>